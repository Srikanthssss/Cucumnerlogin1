<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="47824" started-at="2023-01-25T18:09:02 IST" finished-at="2023-01-25T18:09:50 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="47824" started-at="2023-01-25T18:09:02 IST" finished-at="2023-01-25T18:09:50 IST">
      <class name="stepdef.TestRunner">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="setUpClass" is-config="true" duration-ms="926" started-at="2023-01-25T18:09:03 IST" finished-at="2023-01-25T18:09:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@26b95b0b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="runScenario" duration-ms="14969" started-at="2023-01-25T18:09:03 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-25T18:09:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify user is able to login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="runScenario" duration-ms="16083" started-at="2023-01-25T18:09:18 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-25T18:09:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify user is able to generate QR Code & URL"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="runScenario" duration-ms="15722" started-at="2023-01-25T18:09:34 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-25T18:09:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify user is able to generate QR Code & URL"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Functionality"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Click  on button' is undefined.
You can implement this step using the snippet(s) below:

@When("Click  on button")
public void click_on_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Click  on button' is undefined.
You can implement this step using the snippet(s) below:

@When("Click  on button")
public void click_on_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:stepdef.TestRunner@6121c9d6]" name="tearDownClass" is-config="true" duration-ms="76" started-at="2023-01-25T18:09:50 IST" finished-at="2023-01-25T18:09:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- stepdef.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
